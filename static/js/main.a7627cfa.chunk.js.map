{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","cn","TodoFilter","searchQuery","setSearchQuery","selectedValue","setSelectedValue","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","isLoading","setIsLoading","isDataReady","all","dataFromServer","todosFS","finally","todosToRender","useMemo","filter","titleMatches","toLowerCase","includes","statusMatches","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7627cfa.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    selectedTodo,\n    setSelectedTodo,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (<td className=\"is-vcentered\" />)}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': selectedTodo !== todo,\n                      'fa-eye-slash': selectedTodo === todo,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  searchQuery: string,\n  setSearchQuery: (value: string) => void,\n  selectedValue: string,\n  setSelectedValue: (value: string) => void\n}\n\nexport const TodoFilter: FC<Props> = (props) => {\n  const {\n    searchQuery,\n    setSearchQuery,\n    selectedValue,\n    setSelectedValue,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedValue}\n            onChange={(e) => setSelectedValue(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {searchQuery && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n              aria-label=\"Clear Search\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: FC<Props> = (props) => {\n  const {\n    selectedTodo,\n    setSelectedTodo,\n  } = props;\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedValue, setSelectedValue] = useState('all');\n  const isDataReady = !isLoading;\n\n  useEffect(\n    () => {\n      setIsLoading(true);\n\n      Promise.all([getTodos()])\n        .then((dataFromServer) => {\n          const [todosFS] = dataFromServer;\n\n          setTodos(todosFS);\n        })\n        .finally(() => setIsLoading(false));\n    },\n    [],\n  );\n\n  const todosToRender = useMemo(\n    () => {\n      return todos.filter(todo => {\n        const titleMatches = todo.title.toLowerCase().includes(searchQuery.toLowerCase());\n        const statusMatches\n          = selectedValue === 'all'\n            || (selectedValue === 'completed' ? todo.completed : !todo.completed);\n\n        return titleMatches && statusMatches;\n      });\n    },\n    [todos, searchQuery, selectedValue],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n                selectedValue={selectedValue}\n                setSelectedValue={setSelectedValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isDataReady && (\n                <TodoList\n                  todos={todosToRender}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}